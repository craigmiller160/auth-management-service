server:
  servlet:
    session:
      cookie:
        name: AUTH-MANAGE-SESSIONID
        path: /auth-management
  ssl:
    key-store-type: PKCS12
    key-store: classpath:keys/auth-manage.p12
    key-store-password: auth-manage-pass
    use-ssl: true
    enabled: true
    protocol: TLS
    enabled-protocols: TLSv1.2,TLSv1.3
    ciphers: ECDHE-ECDSA-AES256-GCM-SHA384,ECDHE-RSA-AES256-GCM-SHA384,ECDHE-ECDSA-CHACHA20-POLY1305,ECDHE-RSA-CHACHA20-POLY1305,ECDHE-ECDSA-AES128-GCM-SHA256,ECDHE-RSA-AES128-GCM-SHA256,ECDHE-ECDSA-AES256-SHA384,ECDHE-RSA-AES256-SHA384,ECDHE-ECDSA-AES128-SHA256,ECDHE-RSA-AES128-SHA256

graphql:
  servlet:
    mapping: /graphql
    enabled: true
    corsEnabled: false

spring:
  jpa:
    properties:
      hibernate.jdbc.time_zone: UTC
      hibernate.dialect: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: none
  datasource:
    url: jdbc:postgresql://${spring.datasource.host}:${spring.datasource.port}/oauth2_server

oauth2:
  auth-login-base-uri: "/auth-management/oauth2"
  auth-code-redirect-uri: "/auth-management/api/oauth/authcode/code"
  post-auth-redirect: "/auth-management"
  client-name: auth-management-service
  cookie-name: auth-management-token
  cookie-max-age-secs: 86400
  cookie-path: "/auth-management"
  insecure-paths: "/actuator/health"
  refresh-token-schema: ${spring.jpa.properties.hibernate.default_schema}

logging:
  level:
    root: INFO
